package com.dithok.login.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller; 
import org.springframework.jdbc.core.JdbcTemplate;  
import org.springframework.web.bind.annotation.RestController;  
import org.springframework.web.bind.annotation.RequestMapping; 
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

//Database handling Part
@Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class DatabaseQueryController {  
  @Autowired // This means to get the bean called userRepository
  			// Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;
  
  @RequestMapping("/add")  // Map ONLY POST Requests
  public @ResponseBody String addNewUser (@RequestParam String userName, 
		  @RequestParam String userPassword, 
		  @RequestParam String userMobileNumber, 
		  @RequestParam String userEmailID, 
		  @RequestParam String userAddress, 
		  @RequestParam String userGender)
  {
	 UserModel n = new UserModel(); 
	 
	 n.setName(userName);
	 n.setEmail(userEmailID);
	 n.setPassword(userPassword);
	 n.setMobileNumber(userMobileNumber);
	 n.setAddress(userAddress);
	 n.setGender(userGender);
	 userRepository.save(n);
	 return "Credential Saved";
  }
@GetMapping(path="/all")
public @ResponseBody Iterable<UserModel> getAllUsers(){
	// This returns a JSON or XML with the users
	return userRepository.findAll();
}